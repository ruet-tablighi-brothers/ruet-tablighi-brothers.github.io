/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SearchIndexRouteImport } from './routes/search/index'
import { Route as SearchResultsRouteImport } from './routes/search/results'
import { Route as ProfileIdRouteImport } from './routes/profile/$id'

const SummaryIndexLazyRouteImport = createFileRoute('/summary/')()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SummaryIndexLazyRoute = SummaryIndexLazyRouteImport.update({
  id: '/summary/',
  path: '/summary/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/summary/index.lazy').then((d) => d.Route))
const SearchIndexRoute = SearchIndexRouteImport.update({
  id: '/search/',
  path: '/search/',
  getParentRoute: () => rootRouteImport,
} as any)
const SearchResultsRoute = SearchResultsRouteImport.update({
  id: '/search/results',
  path: '/search/results',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileIdRoute = ProfileIdRouteImport.update({
  id: '/profile/$id',
  path: '/profile/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile/$id': typeof ProfileIdRoute
  '/search/results': typeof SearchResultsRoute
  '/search': typeof SearchIndexRoute
  '/summary': typeof SummaryIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile/$id': typeof ProfileIdRoute
  '/search/results': typeof SearchResultsRoute
  '/search': typeof SearchIndexRoute
  '/summary': typeof SummaryIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/profile/$id': typeof ProfileIdRoute
  '/search/results': typeof SearchResultsRoute
  '/search/': typeof SearchIndexRoute
  '/summary/': typeof SummaryIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/profile/$id' | '/search/results' | '/search' | '/summary'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/profile/$id' | '/search/results' | '/search' | '/summary'
  id:
    | '__root__'
    | '/'
    | '/profile/$id'
    | '/search/results'
    | '/search/'
    | '/summary/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileIdRoute: typeof ProfileIdRoute
  SearchResultsRoute: typeof SearchResultsRoute
  SearchIndexRoute: typeof SearchIndexRoute
  SummaryIndexLazyRoute: typeof SummaryIndexLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/summary/': {
      id: '/summary/'
      path: '/summary'
      fullPath: '/summary'
      preLoaderRoute: typeof SummaryIndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search/': {
      id: '/search/'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search/results': {
      id: '/search/results'
      path: '/search/results'
      fullPath: '/search/results'
      preLoaderRoute: typeof SearchResultsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/$id': {
      id: '/profile/$id'
      path: '/profile/$id'
      fullPath: '/profile/$id'
      preLoaderRoute: typeof ProfileIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileIdRoute: ProfileIdRoute,
  SearchResultsRoute: SearchResultsRoute,
  SearchIndexRoute: SearchIndexRoute,
  SummaryIndexLazyRoute: SummaryIndexLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
